name = "todo"
specification = "A simple Todo List application that allows users to add, edit, mark as complete, and delete tasks. The application is developed using a Svelete as frontend and Go as backend to store the state.\nSpecifications:\n1. Tasks should be displayed in a list view\n2. Option to add a new task\n3. Option to edit a task\n4. Option to mark tasks as complete/incomplete\n5. Option to delete tasks\n6. Include unit tests for components and logic\n7. Use modern CSS components for cleaner UI\n\nProject structure:\n- backend\n- frontend\n- infra\n- ...\n\nBackend:\n- Use go 1.19\n- Use `github.com/vedhavyas/todo` as the go module name\n- Keep all the components under `backend` folder without any inner packages.\n- Use gorilla mux with standard http router. Do not use Gin or similar frameworks.\n- Use Sqlite to store data.\n\nCI/CD:\n- Use github actions\n- Use docker compose with production and dev variants\n\nNote:\n- Implement all the necessary components.\n- The app should be production ready.\n- Do not give any unimplemented or mocked logic."

[metadata]
  [metadata.".github/workflows/ci.yml"]
    filenames = []
    functions = []
    packages = []
    references = []
    variables = []
  [metadata."README.md"]
    filenames = []
    functions = []
    packages = []
    references = []
    variables = []
  [metadata."backend/config.go"]
    filenames = []
    functions = ["loadConfig"]
    packages = []
    references = []
    variables = ["Config"]
  [metadata."backend/db.go"]
    filenames = ["models.go"]
    functions = ["initDB", "closeDB", "createTask", "updateTask", "markTask", "deleteTask", "allTasks"]
    packages = []
    references = ["Task"]
    variables = ["db"]
  [metadata."backend/go.mod"]
    filenames = []
    functions = []
    packages = ["github.com/vedhavyas/todo"]
    references = ["github.com/gorilla/mux", "github.com/mattn/go-sqlite3"]
    variables = []
  [metadata."backend/handlers.go"]
    filenames = ["db.go", "models.go"]
    functions = ["CreateTaskHandler", "UpdateTaskHandler", "MarkTaskHandler", "DeleteTaskHandler", "AllTasksHandler"]
    packages = []
    references = ["Task", "createTask", "updateTask", "markTask", "deleteTask", "allTasks"]
    variables = ["Handlers"]
  [metadata."backend/main.go"]
    filenames = ["config.go", "routes.go"]
    functions = ["initDB"]
    packages = ["config", "routes"]
    references = []
    variables = ["main"]
  [metadata."backend/models.go"]
    filenames = []
    functions = []
    packages = []
    references = []
    variables = ["Task"]
  [metadata."backend/routes.go"]
    filenames = ["handlers.go"]
    functions = ["registerRoutes"]
    packages = ["handlers"]
    references = ["CreateTaskHandler", "UpdateTaskHandler", "MarkTaskHandler", "DeleteTaskHandler", "AllTasksHandler"]
    variables = []
  [metadata."frontend/package.json"]
    filenames = []
    functions = []
    packages = []
    references = ["svelte", "svite", "sveld", "routify"]
    variables = []
  [metadata."frontend/src/App.svelte"]
    filenames = ["Tasks.svelte", "utils.css"]
    functions = []
    packages = []
    references = []
    variables = []
  [metadata."frontend/src/components/TaskForm.svelte"]
    filenames = []
    functions = ["handleSubmit"]
    packages = []
    references = []
    variables = []
  [metadata."frontend/src/components/Tasks.svelte"]
    filenames = ["TaskForm.svelte"]
    functions = ["fetchTasks", "deleteTask", "markTask", "createTask", "updateTask"]
    packages = []
    references = []
    variables = ["tasks"]
  [metadata."frontend/src/components/utils.css"]
    filenames = []
    functions = []
    packages = []
    references = []
    variables = []
  [metadata."frontend/src/main.js"]
    filenames = ["App.svelte"]
    functions = []
    packages = []
    references = []
    variables = []
  [metadata."infra/Dockerfile"]
    filenames = ["backend", "frontend"]
    functions = []
    packages = []
    references = []
    variables = []
  [metadata."infra/docker-compose.dev.yml"]
    filenames = []
    functions = []
    packages = []
    references = ["Dockerfile"]
    variables = []
  [metadata."infra/docker-compose.yml"]
    filenames = []
    functions = []
    packages = []
    references = ["Dockerfile"]
    variables = []

[files]
  ".github/workflows/ci.yml" = false
  "README.md" = false
  "backend/config.go" = false
  "backend/db.go" = false
  "backend/go.mod" = false
  "backend/handlers.go" = false
  "backend/main.go" = false
  "backend/models.go" = false
  "backend/routes.go" = false
  "frontend/package.json" = false
  "frontend/src/App.svelte" = false
  "frontend/src/components/TaskForm.svelte" = false
  "frontend/src/components/Tasks.svelte" = false
  "frontend/src/components/utils.css" = false
  "frontend/src/main.js" = false
  "infra/Dockerfile" = false
  "infra/docker-compose.dev.yml" = false
  "infra/docker-compose.yml" = false
